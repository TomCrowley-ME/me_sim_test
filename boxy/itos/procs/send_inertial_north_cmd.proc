PROC send_inertial_north_cmd

LOCAL latitude, longitude
LOCAL use_default

use_default = 10
ASK "Enter 0 to use default lat/long values, Enter 1 to input new values, Cancel to exit", use_default
IF (isint(use_default)) THEN
     EVENT WARN  "Exiting send_inertial_north_cmd  with no action"
     RETURN
ELSEIF (STRTOL(use_default) .eq. 1) THEN
    EVENT WARN "not implemented"
ELSEIF (STRTOL(use_default) .eq. 0) THEN
    latitude = 28.470556
    longitude = -80.54
ENDIF

LOCAL sc_time, utc_date_string
GLOBAL sequence_start_time
sc_time = cmp_mtv_msg.timestamp
sequence_start_time = TODATE(TOINT(STRFDATE("%s", sc_time))+30)
;SHO strfdate("%y %m %d %H %M %S", sc_time)
utc_date_string = concat("[20",  strfdate("%y %m %d %H %M %S", sequence_start_time), "]")
SHO utc_date_string

LOCAL octave_cmd
LOCAL tmp_filename
tmp_filename = concat(GETENV(ITOS_GROUPDIR), "/", GETENV(ITOS_TMPDIR), "/north_vector_eci.csv")
octave_cmd =  concat( "octave --eval \""addpath([pwd filesep 'procs']); cd ", GETENV(BENDER_PATH), "/phil/wsim; disp(pwd); octave_inertial_north(", utc_date_string, ",", TOSTRING(latitude), ",", TOSTRING(longitude), ",'", tmp_filename, "')\""")

SYSTEM octave_cmd

LOCAL stat
LOCAL x, y, z
OPEN (1) (tmp_filename) READ STATUS=stat
READ (1 TIMEOUT=1 STATUS=stat) x, y, z
CLOSE (1)

LOCAL cmd_string = concat("/gdn_set_inertial_secondary_pointing_cmd x=", x, ",y=", y, ",z=", z)

ASK (concat("Command authorization: click OK to accept value and send comand \n", cmd_string))

LOCAL current_cmd_pc, cmd_status, cmp_status, status, success

current_cmd_pc = cmp_mtv_msg.process_cmds_counter

EVAL(cmd_string)

WAIT 1 UNTIL (cmp_mtv_msg.inertial_secondary_pointing_cmd[0] .EQ. x ) status=success
cmp_status=success
WAIT 1 UNTIL (cmp_mtv_msg.process_cmds_counter .gt. current_cmd_pc) status=success
cmd_status=success

if (bwand(cmd_status, cmp_status) .eq. 0) THEN
   EVENT ERROR "The inertial north vector has not been set...proc has failed"
ELSE
   EVENT INFO "Inertial 'north' has been successfully set"
ENDIF


ENDPROC
