%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright 2010 - 2015 Moon Express, Inc.
% All Rights Reserved.
%
% PROPRIETARY DATA NOTICE:
% The data herein include Proprietary Data and are restricted under the
% Data Rights provisions of Lunar CATALYST Space Act Agreement
% No. SAAM ID# 18251 and Reimbursable Space Act Agreement No.SAA2-402930.
% All information contained herein is and remains proprietary to and the
% property of Moon Express, Inc. Dissemination of this information or
% reproduction of this material is strictly forbidden unless prior
% written permission is obtained from Moon Express, Inc.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function csc_stm_simplified_temperature_model_collection_generate(heater_list)

nimbus_root = getenv('NIMBUS_ROOT');
if isempty(nimbus_root)
    error('NIMBUS_ROOT is not set -- first run nimbus_set_path');
end

sys = 'csc_stm_simplified_temperature_model_collection_lib';
subsys = [sys '/csc_stm_simplified_temperature_model_collection'];

sc_num_heater = length(heater_list);

try
    load_system(sys);
catch
    error('Cannot load csc_stm_simplified_temperature_model_collection_lib. Cannot proceed.')
end

% At this point, we have the existing library open -- nuke the subsystem so we can start fresh
fprintf(1, 'Regenerating csc_stm_simplified_temperature_model_collection_lib...\n');
set_param(sys, 'Lock', 'off');

try
    delete_block(subsys);
catch
    % Subsystem doesn't exist -- no bother
end

vlv_mask_display = ...
[ ...
    'color(''blue'');' ...
    'text(0.05, 0.02, ''MoonEx'', ''HorizontalAlignment'', ''Left'', ''VerticalAlignment'', ''Bottom'');' ...
    'color(''red'');' ...
    'text(0.95, 0.02, ''Autogenerated'', ''HorizontalAlignment'', ''Right'', ''VerticalAlignment'', ''Bottom'');' ...
];

% Add the actual subsystem 
add_block('built-in/Subsystem', subsys, 'BackgroundColor', 'yellow', 'MaskDisplay', vlv_mask_display, 'MaskIconOpaque', 'off', 'Position', [200 200 415 340]);
add_block('built-in/Note', [subsys '/AUTOGENERATED BY ' mfilename char(10) 'DO NOT EDIT'], 'FontWeight', 'bold', 'FontSize', '14', 'Position', [700 0 0 -40]);
add_block('util_info_lib/Library Information', [subsys '/Library Information'], 'ShowName', 'off', 'Position', [0 -300 430 -100]);

% Add the time inport and its corresponding goto
add_block('built-in/EnablePort', [subsys '/stm_enable'], 'Position', [0 60 30 100]);
add_block('built-in/Inport', [subsys '/heater_state'], 'BackgroundColor', 'green', 'Port', '1', 'Position', [20 135 50 149]);

% Add the 'thrust' concatenate and its output port, and connect the two
temp_concat_h = sc_num_heater*20;
add_block('built-in/BusCreator', [subsys '/temp_bus_out'], 'Inputs', int2str(sc_num_heater),'ShowName', 'off', 'Position', [1100 128 1105 (128+temp_concat_h)]);
add_block('built-in/Outport', [subsys '/temp_vec'], 'BackgroundColor', 'red', 'Port', '1', 'Position', [1150 (128+temp_concat_h/2-7) 1180 (128+temp_concat_h/2+7)]);
add_line(subsys, 'temp_bus_out/1', 'temp_vec/1');


csu_tdl_pos = [270 100 420 175];

for i=1:sc_num_heater

    i_str = num2str(i);

    % Add the tdl block
    exr_params = { i_str, ... %temp sensor ID
                   ['stm_tc' i_str '_heater_id'], ... %id of heater which drives this TC
                   ['stm_tc' i_str '_initial_temperature'], ... %temp sensor initial temp (celcius)
                   [ '-25' ], ...%['stm_tc' i_str '_cold_asymptote'], ...
                   [ '+105' ], ...%['stm_tc' i_str '_hot_asymptote'], ...
                   ['stm_tc' i_str '_eqn_coefficients(1)'], ...
                   ['stm_tc' i_str '_eqn_coefficients(2)'], ...
                   ['stm_tc' i_str '_eqn_coefficients(3)'], ...
                   ['stm_tc' i_str '_eqn_coefficients(4)'], ...
                   ['stm_tc' i_str '_eqn_coefficients(5)'], ...
                   [ 'stm_celcius_to_bits_slope'], ...
                   [ 'stm_celcius_to_bits_offset'], ...
                   };
    add_block('csu_stm_simplified_temperature_model_lib/csu_stm_simplified_temperature_model', [subsys '/csu_stm_simplified_temperature_model' i_str], 'MaskValues', exr_params, 'Position', csu_tdl_pos);

    % update subsystem position to be further down the screen
    csu_tdl_pos = csu_tdl_pos + [0 100 0 100];

end

% Post-Processing -- laying these lines down earlier would result in them running through blocks

for i = sc_num_heater : -1 : 1
    i_str = num2str(i);
    add_line(subsys, 'heater_state/1', ['csu_stm_simplified_temperature_model' i_str '/1'], 'autorouting', 'on');
    
    % add line from thrust output to thrust vector concatenate
    h = add_line(subsys, ['csu_stm_simplified_temperature_model' i_str '/1'], ['temp_bus_out/' i_str],'autorouting', 'on');
    set_param(h, 'Name',['temp_sense_' num2str(i_str)])
end

% We're done! Save, close, and exit
save_system(sys, [nimbus_root '/sim/fhw/thermal/' sys '.slx']);
close_system(sys);

end

