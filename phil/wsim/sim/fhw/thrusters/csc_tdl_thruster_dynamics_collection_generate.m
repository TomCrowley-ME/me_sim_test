%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright 2010 - 2015 Moon Express, Inc.
% All Rights Reserved.
%
% PROPRIETARY DATA NOTICE:
% The data herein include Proprietary Data and are restricted under the
% Data Rights provisions of Lunar CATALYST Space Act Agreement
% No. SAAM ID# 18251 and Reimbursable Space Act Agreement No.SAA2-402930.
% All information contained herein is and remains proprietary to and the
% property of Moon Express, Inc. Dissemination of this information or
% reproduction of this material is strictly forbidden unless prior
% written permission is obtained from Moon Express, Inc.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function csc_tdl_thruster_dynamics_collection_generate(thruster_list, vehicle)

nimbus_root = getenv('NIMBUS_ROOT');
if isempty(nimbus_root)
    error('NIMBUS_ROOT is not set -- first run nimbus_set_path');
end

if strcmp(vehicle, 'schooner') || ~isempty( strfind(vehicle, 'mtv') )    
    gen_for_mtv = 1;   
else
    gen_for_mtv = 0;
end



if gen_for_mtv
    fprintf(1,'Generating for MTV\n')
    
    sys = 'csc_tdl_thruster_dynamics_collection_mtv_lib';
    subsys = [sys '/csc_tdl_thrster_dynamics_collection_mtv'];
    
else
    fprintf(1,'Generating for NIMBUS\n')
    
    sys = 'csc_tdl_thruster_dynamics_collection_lib';
    subsys = [sys '/csc_tdl_thrster_dynamics_collection'];
end


sc_num_thruster = length(thruster_list);

try
    load_system(sys);
catch
    error('Cannot load csc_tdl_thrster_dynamics_collection_lib. Cannot proceed.')
end

% At this point, we have the existing library open -- nuke the subsystem so we can start fresh
fprintf(1, 'Regenerating csc_tdl_thrster_dynamics_collection_lib...\n');
set_param(sys, 'Lock', 'off');

try
    delete_block(subsys);
catch
    % Subsystem doesn't exist -- no bother
end

vlv_mask_display = ...
[ ...
    'color(''blue'');' ...
    'text(0.05, 0.02, ''MoonEx'', ''HorizontalAlignment'', ''Left'', ''VerticalAlignment'', ''Bottom'');' ...
    'color(''red'');' ...
    'text(0.95, 0.02, ''Autogenerated'', ''HorizontalAlignment'', ''Right'', ''VerticalAlignment'', ''Bottom'');' ...
];

% Add the actual subsystem 
if gen_for_mtv
    add_block('built-in/Subsystem', subsys, 'BackgroundColor', 'orange', 'MaskDisplay', vlv_mask_display, 'MaskIconOpaque', 'off', 'Position', [200 200 415 340]);
else
    add_block('built-in/Subsystem', subsys, 'BackgroundColor', 'yellow', 'MaskDisplay', vlv_mask_display, 'MaskIconOpaque', 'off', 'Position', [200 200 415 340]);
end
add_block('built-in/Note', [subsys '/AUTOGENERATED BY ' mfilename char(10) 'DO NOT EDIT'], 'FontWeight', 'bold', 'FontSize', '14', 'Position', [700 0 0 -40]);
add_block('util_info_lib/Library Information', [subsys '/Library Information'], 'ShowName', 'off', 'Position', [0 -300 430 -100]);

timeColor = '[0.262745, 0.458824, 0.650980]';

% Add the time inport and its corresponding goto
add_block('built-in/Inport', [subsys '/sim_time'], 'BackgroundColor', 'green', 'Port', '2', 'Position', [20 30 50 44]);
add_block('built-in/Goto', [subsys '/goto_time'], 'BackgroundColor', timeColor, 'GotoTag', 'time', 'Position', [100 26 155 44], 'ShowName', 'off');
add_line(subsys, 'sim_time/1', 'goto_time/1');

% Add the transition_type input port
add_block('built-in/Inport', [subsys '/transition_type'], 'BackgroundColor', 'green', 'Port', '1', 'Position',[20 62 50 76]);
add_block('built-in/Goto', [subsys '/goto_type'], 'BackgroundColor', 'magenta', 'GotoTag', 'trans_type', 'Position', [100 62 165 81], 'ShowName', 'off');
add_line(subsys, 'transition_type/1', 'goto_type/1');

% Add the transition_time input port
add_block('built-in/Inport', [subsys '/transition_time'], 'BackgroundColor', 'green', 'Port', '1', 'Position',[20 110 50 124]);

% Add the 'thrust' concatenate and its output port, and connect the two
thrust_concat_h = sc_num_thruster*20;
add_block('built-in/Concatenate', [subsys '/thrust_concatenate'], 'ShowName', 'off', 'NumInputs', num2str(sc_num_thruster), 'Position', [700 95 705 (95+thrust_concat_h)]);
add_block('built-in/Outport', [subsys '/thrust_vec'], 'BackgroundColor', 'red', 'Port', '1', 'Position', [750 (95+thrust_concat_h/2-7) 780 (95+thrust_concat_h/2+7)]);
add_line(subsys, 'thrust_concatenate/1', 'thrust_vec/1');


csu_tdl_pos = [270 100 420 175];

for i=1:sc_num_thruster

    i_str = num2str(i);

    % Add the tdl block
    exr_params = {i_str, num2str(sc_num_thruster), ...
                         ['tdl_thruster' i_str '_rising_lookup_time'], ['tdl_thruster' i_str '_rising_lookup_thrust'], ...
                         ['tdl_thruster' i_str '_falling_lookup_time'], ['tdl_thruster' i_str '_falling_lookup_thrust'], ...
                         ['tdl_thruster' i_str '_thrust_noise_mean'], ['tdl_thruster' i_str '_thrust_noise_std'], ...
                         ['tdl_thruster' i_str '_thrust_noise_seed'], ['tdl_thruster' i_str '_thrust_noise_enable']};
    add_block('csu_tdl_thruster_dynamics_lander_lib/csu_tdl_dynamics_thruster', [subsys '/csu_tdl_dynamics_thruster' i_str], 'MaskValues', exr_params, 'Position', csu_tdl_pos);

    % Add the time input from tag
    time_from_x = csu_tdl_pos(1) - 75;
    time_from_y = csu_tdl_pos(2) + 55;
    add_block('built-in/From', [subsys '/time_from' i_str], 'BackgroundColor', timeColor, 'GotoTag', 'time', 'ShowName', 'off', 'Position', [time_from_x time_from_y (time_from_x+55) (time_from_y+15)]);
    add_line(subsys, ['time_from' i_str '/1'], ['csu_tdl_dynamics_thruster' i_str '/3']);
    
    % Add the transition_type input from tag
    type_from_x = csu_tdl_pos(1) - 90;
    type_from_y = csu_tdl_pos(2) + 5;
    add_block('built-in/From', [subsys '/type_from' i_str], 'BackgroundColor', 'magenta', 'GotoTag', 'trans_type', 'ShowName', 'off', 'Position', [type_from_x type_from_y (type_from_x+65) (type_from_y+15)]);
    add_line(subsys, ['type_from' i_str '/1'], ['csu_tdl_dynamics_thruster' i_str '/1']);
    
    % add line from thrust output to thrust vector concatenate
    add_line(subsys, ['csu_tdl_dynamics_thruster' i_str '/1'], ['thrust_concatenate/' i_str],'autorouting', 'on');

    % update subsystem position to be further down the screen
    csu_tdl_pos = csu_tdl_pos + [0 100 0 100];

end

% Post-Processing -- laying these lines down earlier would result in them running through blocks

for i = sc_num_thruster : -1 : 1
    i_str = num2str(i);
    add_line(subsys, 'transition_time/1', ['csu_tdl_dynamics_thruster' i_str '/2'], 'autorouting', 'on');
    
end

% We're done! Save, close, and exit

if gen_for_mtv
    fprintf(1,'Saving for MTV\n')
    save_system(sys, [nimbus_root '/mtv/sim/' sys '.slx']);
else
    fprintf(1,'Saving for NIMBUS\n')
    save_system(sys, [nimbus_root '/sim/fhw/thrusters/' sys '.slx']);
end

close_system(sys);

end

